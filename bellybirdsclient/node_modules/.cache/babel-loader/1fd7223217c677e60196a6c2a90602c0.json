{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Chat/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { TextField, Button } from '@material-ui/core';\nimport { useButtonStyles } from \"../../RootStyles\";\nimport Header from \"../Header\";\nimport './style.css';\nexport default function Chat() {\n  _s();\n\n  const [chatMessage, setChatMessage] = useState(\"\");\n  const [chatMessages, setChatMessages] = useState([]);\n  const [wsRef, setWsRef] = useState(null);\n  const buttonclasses = useButtonStyles();\n\n  function sendMessage() {\n    if ((wsRef === null || wsRef === void 0 ? void 0 : wsRef.readyState) !== WebSocket.OPEN) {\n      // websocket not connected\n      return;\n    }\n\n    wsRef.send(JSON.stringify({\n      message: chatMessage\n    }));\n  }\n\n  useEffect(() => {\n    const ws = new WebSocket(\"ws://localhost:1338\");\n    ws.addEventListener(\"open\", () => {\n      ws.send(JSON.stringify({\n        status: 'ok'\n      }));\n    }, {\n      once: true\n    });\n    setWsRef(ws);\n    return () => {\n      ws.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__message\",\n      children: chatMessages.map((message, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"author\",\n            children: message.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 22\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat Box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        multiline: true,\n        rows: 10,\n        onChange: e => setChatMessage(e.target.value),\n        value: chatMessage,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        className: buttonclasses.secondary,\n        onClick: sendMessage,\n        color: \"default\",\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"2lLJ3pYGampdLD9KJF6f9xfqFQ4=\", false, function () {\n  return [useButtonStyles];\n});\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Chat/index.tsx"],"names":["React","useEffect","useState","TextField","Button","useButtonStyles","Header","Chat","chatMessage","setChatMessage","chatMessages","setChatMessages","wsRef","setWsRef","buttonclasses","sendMessage","readyState","WebSocket","OPEN","send","JSON","stringify","message","ws","addEventListener","status","once","close","map","index","user","e","target","value","secondary"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { TextField, Button } from '@material-ui/core';\nimport { useButtonStyles} from \"../../RootStyles\"\nimport Header from \"../Header\";\nimport './style.css';\n\n\ntype Message = {\n  user: string;\n  message: string;\n  //ToDO: date\n}\n\n\nexport default function Chat() {\n\n  const [chatMessage, setChatMessage] = useState<string>(\"\");\n  const [chatMessages, setChatMessages] = useState<Array<Message>>([]);\n  const [wsRef, setWsRef] = useState<null | WebSocket>(null);\n\n  const buttonclasses = useButtonStyles();\n\n\n\n  function sendMessage() {\n      if(wsRef?.readyState !== WebSocket.OPEN) {\n        // websocket not connected\n        return;\n      }\n      wsRef.send(JSON.stringify({ message: chatMessage}))\n  }\n\n  useEffect(() => {\n       const ws = new WebSocket(\"ws://localhost:1338\");\n\n       ws.addEventListener(\"open\", ()=> {\n        ws.send(JSON.stringify({ status: 'ok'}));\n       }, {once: true})\n\n       setWsRef(ws);\n\n       return () => {\n         ws.close();\n       }\n\n  }, [])\n  \n  return (\n    <div className=\"chat\">\n       <Header></Header>\n       <div className=\"chat__message\">\n         { chatMessages.map( (message, index) => {\n           return (<div className=\"message\" key={index}>\n                     <div className=\"author\">{message.user}</div>\n                     <div>{message.message}</div>\n                 </div>)\n         }) }\n       </div>\n       <div className=\"chat__box\">\n          <h1>Chat Box</h1>\n          <TextField fullWidth multiline rows={10} onChange={(e: any) => setChatMessage(e.target.value)} value={chatMessage}  variant=\"outlined\" />\n          <br />\n          <Button  fullWidth className={buttonclasses.secondary}  onClick={sendMessage} color=\"default\" >Send Message</Button>\n       </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}