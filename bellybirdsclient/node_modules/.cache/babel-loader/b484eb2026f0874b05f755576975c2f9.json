{"ast":null,"code":"import{createStore}from\"redux\";import jwt_decode from\"jwt-decode\";var token=localStorage.getItem(\"token\");var decoded={email:undefined,username:undefined};if(token&&token.length>20){decoded=jwt_decode(token);}var intitalState={user:{email:decoded.email?decoded.email:\"\",uname:decoded.username?decoded.username:\"\"}};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:intitalState;var action=arguments.length>1?arguments[1]:undefined;var newState=state;if(action.type===\"getUser\"){newState.user=action.user;}return newState;};export var store=createStore(reducer);","map":{"version":3,"sources":["/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/redux.ts"],"names":["createStore","jwt_decode","token","localStorage","getItem","decoded","email","undefined","username","length","intitalState","user","uname","reducer","state","action","newState","type","store"],"mappings":"AACA,OAAQA,WAAR,KAA0B,OAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA,GAAMC,CAAAA,KAAU,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAnB,CACA,GAAIC,CAAAA,OAAO,CAAG,CACVC,KAAK,CAAEC,SADG,CAEVC,QAAQ,CAAED,SAFA,CAAd,CAIA,GAAGL,KAAK,EAAIA,KAAK,CAACO,MAAN,CAAe,EAA3B,CAA+B,CAC1BJ,OAAO,CAAGJ,UAAU,CAACC,KAAD,CAApB,CACJ,CAID,GAAMQ,CAAAA,YAAY,CAAG,CACjBC,IAAI,CAAE,CACFL,KAAK,CAAED,OAAO,CAACC,KAAR,CAAgBD,OAAO,CAACC,KAAxB,CAAgC,EADrC,CAEFM,KAAK,CAAEP,OAAO,CAACG,QAAR,CAAmBH,OAAO,CAACG,QAA3B,CAAsC,EAF3C,CADW,CAArB,CAQA,GAAMK,CAAAA,OAAY,CAAG,QAAfA,CAAAA,OAAe,EAA4C,IAA3CC,CAAAA,KAA2C,2DAA9BJ,YAA8B,IAAhBK,CAAAA,MAAgB,2CAC5D,GAAMC,CAAAA,QAAY,CAAGF,KAArB,CACA,GAAGC,MAAM,CAACE,IAAP,GAAgB,SAAnB,CAA8B,CAC1BD,QAAQ,CAACL,IAAT,CAAgBI,MAAM,CAACJ,IAAvB,CACH,CACD,MAAOK,CAAAA,QAAP,CACJ,CAND,CAQA,MAAO,IAAME,CAAAA,KAAK,CAAGlB,WAAW,CAACa,OAAD,CAAzB","sourcesContent":["\nimport {createStore} from \"redux\";\nimport jwt_decode from \"jwt-decode\";\n\nconst token: any = localStorage.getItem(\"token\");\nlet decoded = {\n    email: undefined,\n    username: undefined\n}\nif(token && token.length > 20) {\n     decoded = jwt_decode(token);\n}\n\n\n\nconst intitalState = {\n    user: {\n        email: decoded.email ? decoded.email : \"\",\n        uname: decoded.username ? decoded.username : \"\"\n    }\n}\n\n\nconst reducer: any = (state: any = intitalState, action: any) => {\n     const newState:any = state;\n     if(action.type === \"getUser\") {\n         newState.user = action.user\n     }\n     return newState;\n}\n\nexport const store = createStore(reducer);\n\n"]},"metadata":{},"sourceType":"module"}