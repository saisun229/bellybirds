{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Nav/index.tsx\",\n    _s = $RefreshSig$();\n\nimport './style.scss';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { store } from \"../../redux\"; // import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n// import Link  from '@material-ui/core/Link';\n// import Typography from '@material-ui/core/Typography';\n\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { useHistory } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => createStyles({\n  typography: {\n    padding: theme.spacing(2)\n  }\n})); // const useStyles = makeStyles((theme: Theme) =>\n//   createStyles({\n//     root: {\n//       '& > * + *': {\n//         marginLeft: theme.spacing(2),\n//         color: '#000'\n//       },\n//     },\n//   }),\n// );\n\nexport default function Nav() {\n  _s();\n\n  const history = useHistory();\n  const state = store.getState();\n  const isUserAvailable = state.user.email ? true : false;\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  }; // const classes = useStyles();\n  // function redirectToLogin() {\n  //   history.push(\"/login\");\n  // }\n  // function redirectToRegister() {\n  //   history.push(\"/register\");\n  // }\n\n\n  function redirectUserToChat() {\n    isUserAvailable ? history.push(\"/chat\") : history.push(\"/login\");\n  }\n\n  function redirectUserToHome() {\n    isUserAvailable ? history.push(\"/\") : history.push(\"/login\");\n  } // function logoutUser() {\n  //   window.localStorage.removeItem(\"token\");\n  //   store.dispatch({ type: 'getUser', user: { email: \"\", uname: \"\" } });\n  //   history.push(\"/\");\n  // }\n\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"nav\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav--home\",\n      children: /*#__PURE__*/_jsxDEV(HomeIcon, {\n        fontSize: \"large\",\n        onClick: redirectUserToHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav--chat\",\n      children: /*#__PURE__*/_jsxDEV(ChatIcon, {\n        fontSize: \"large\",\n        onClick: redirectUserToChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav--account\",\n      children: [/*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav--account-popup\",\n        children: isUserAvailable ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Hi \", state.user.uname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 36\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 95\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 109\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 91\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Nav, \"mDUKn6axBo+Mhaa4HjuYm0vtZdg=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Nav/index.tsx"],"names":["HomeIcon","AccountCircleIcon","ChatIcon","store","React","makeStyles","createStyles","useHistory","useStyles","theme","typography","padding","spacing","Nav","history","state","getState","isUserAvailable","user","email","classes","anchorEl","setAnchorEl","useState","handleClick","event","currentTarget","handleClose","redirectUserToChat","push","redirectUserToHome","open","Boolean","id","undefined","uname"],"mappings":"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","sourcesContent":["import './style.scss';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { store } from \"../../redux\";\n// import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n// import Link  from '@material-ui/core/Link';\n// import Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typography: {\n      padding: theme.spacing(2),\n    },\n  }),\n);\n\n// const useStyles = makeStyles((theme: Theme) =>\n//   createStyles({\n//     root: {\n//       '& > * + *': {\n//         marginLeft: theme.spacing(2),\n//         color: '#000'\n//       },\n//     },\n//   }),\n// );\nexport default function Nav() {\n\n  const history = useHistory();\n  const state: any = store.getState();\n  const isUserAvailable = state.user.email ? true : false;\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  // const classes = useStyles();\n\n  // function redirectToLogin() {\n  //   history.push(\"/login\");\n  // }\n\n  // function redirectToRegister() {\n  //   history.push(\"/register\");\n  // }\n\n  function redirectUserToChat() {\n    isUserAvailable ? history.push(\"/chat\") : history.push(\"/login\");\n  }\n\n  function redirectUserToHome() {\n    isUserAvailable ? history.push(\"/\") : history.push(\"/login\");\n  }\n\n  // function logoutUser() {\n  //   window.localStorage.removeItem(\"token\");\n  //   store.dispatch({ type: 'getUser', user: { email: \"\", uname: \"\" } });\n  //   history.push(\"/\");\n  // }\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  return (\n    <nav className=\"nav\">\n      <div className=\"nav--home\">\n        <HomeIcon fontSize=\"large\" onClick={redirectUserToHome}></HomeIcon>\n      </div>\n      <div className=\"nav--chat\">\n        <ChatIcon fontSize=\"large\" onClick={redirectUserToChat}></ChatIcon>\n      </div>\n      <div className=\"nav--account\">\n        <AccountCircleIcon fontSize=\"large\"></AccountCircleIcon>\n        <div className=\"nav--account-popup\">\n          {\n            isUserAvailable ? (<ul><li>Hi {state.user.uname}</li><li>Logout</li></ul>) : (<ul><li>Login</li><li>Register</li></ul>)\n          }\n        </div>\n      </div>\n\n      {/* {\n        isUserAvailable ? (\n\n          <div className=\"home__header__nav\">\n           <Typography className={classes.root}>\n             <Link href=\"#\" component=\"button\" onClick={logoutUser}>Logout</Link>\n             <Link href=\"#\" component=\"button\" onClick={redirectUser} color=\"inherit\">Hi {state.user.uname}</Link>\n          </Typography>\n          </div>) : \n          (<div className=\"home__header__nav\">\n           <Typography className={classes.root}>\n             <Link href=\"#\" component=\"button\"  onClick={redirectToLogin}  >Login</Link>\n             <Link href=\"#\" component=\"button\"  onClick={redirectToRegister} >Register</Link>\n          </Typography>\n          </div>)\n\n      } */}\n    </nav>\n  )\n}"]},"metadata":{},"sourceType":"module"}