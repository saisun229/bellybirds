{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Chat/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { TextField } from '@material-ui/core';\nimport Banner from \"../Banner\";\nimport './style.scss';\nimport { useHistory } from \"react-router-dom\";\nimport { store } from \"../../redux\"; // import Link from '@material-ui/core/Link';\n\nimport SendIcon from '@material-ui/icons/Send';\nconst HOST = window.location.hostname + ':1338';\nexport default function Chat() {\n  _s();\n\n  const [chatMessage, setChatMessage] = useState(\"\");\n  const [chatMessages, setChatMessages] = useState([]);\n  const [wsRef, setWsRef] = useState(null);\n  const history = useHistory();\n  const state = store.getState(); // let count = 10;\n\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  };\n\n  function processMessage(payload) {\n    try {\n      return JSON.parse(payload);\n    } catch (e) {\n      return null;\n    }\n  } // function showMore() {\n  //   if (wsRef?.readyState !== WebSocket.OPEN) {\n  //     // websocket not connected\n  //     return;\n  //   }\n  //   count = count + 10;\n  //   wsRef.send(JSON.stringify({ intent: 'old-messages', count: count }));\n  // }\n\n\n  function sendMessage() {\n    if ((wsRef === null || wsRef === void 0 ? void 0 : wsRef.readyState) !== WebSocket.OPEN) {\n      // websocket not connected\n      return;\n    }\n\n    wsRef.send(JSON.stringify({\n      message: chatMessage,\n      intent: \"chat\",\n      uname: state.user.uname\n    }));\n    setChatMessage(\"\");\n    window.scrollTo(0, document.body.scrollHeight);\n  }\n\n  useEffect(() => {\n    console.log(\"im fired\", document.body.scrollHeight);\n    window.scrollTo(0, document.body.scrollHeight);\n  }, []);\n  useEffect(() => {\n    const ws = new WebSocket(`ws://${HOST}/${localStorage.getItem(\"token\")}`);\n    ws.addEventListener(\"open\", () => {\n      ws.send(JSON.stringify({\n        intent: 'old-messages',\n        count: 100\n      }));\n    }, {\n      once: true\n    });\n    ws.addEventListener(\"error\", () => {\n      this.messagesEnd.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    });\n    ws.addEventListener(\"message\", event => {\n      const data = event.data;\n      const message = processMessage(data);\n      if (!message) return;\n      console.log(\"message\", message);\n\n      if (message.intent === \"chat\") {\n        setChatMessages(oldMessages => [...oldMessages, message]);\n      } else if (message.intent === \"old-messages\") {\n        console.log(\"old-messages\", message.data);\n        setChatMessages(message.data.reverse());\n      }\n    });\n    setWsRef(ws);\n    return () => {\n      ws.close();\n    };\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__messages\",\n        children: [chatMessages.map((message, index) => {\n          if (message.uname === state.user.uname) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat__messages__item active\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat__messages__item__wrapper--active\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"author\",\n                  children: [message.uname, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message\",\n                  children: message.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat__messages__item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat__messages__item__wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"author\",\n                  children: [message.uname, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message\",\n                  children: message.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this);\n          }\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            float: \"left\",\n            clear: \"both\"\n          },\n          ref: el => {\n            this.messagesEnd = el;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__box\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          onKeyDown: handleKeyDown,\n          placeholder: \"Live Chat Here\",\n          label: \"Type Your Message\",\n          onChange: e => setChatMessage(e.target.value),\n          value: chatMessage,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat__box__send\",\n          role: \"button\",\n          children: /*#__PURE__*/_jsxDEV(SendIcon, {\n            fontSize: \"large\",\n            onClick: sendMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"C9FCwyKULAGXVHR3uJZbHn8W1Jo=\", false, function () {\n  return [useHistory];\n});\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Chat/index.tsx"],"names":["React","useEffect","useState","TextField","Banner","useHistory","store","SendIcon","HOST","window","location","hostname","Chat","chatMessage","setChatMessage","chatMessages","setChatMessages","wsRef","setWsRef","history","state","getState","handleKeyDown","event","key","sendMessage","processMessage","payload","JSON","parse","e","readyState","WebSocket","OPEN","send","stringify","message","intent","uname","user","scrollTo","document","body","scrollHeight","console","log","ws","localStorage","getItem","addEventListener","count","once","messagesEnd","scrollIntoView","behavior","data","oldMessages","reverse","close","map","index","float","clear","el","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { TextField } from '@material-ui/core';\nimport Banner from \"../Banner\";\nimport './style.scss';\nimport { useHistory } from \"react-router-dom\";\nimport { store } from \"../../redux\";\n// import Link from '@material-ui/core/Link';\nimport SendIcon from '@material-ui/icons/Send';\n\n\ntype Message = {\n  email: string;\n  uname: string;\n  message: string;\n  intent: string;\n  //ToDO: date\n}\n\nconst HOST = window.location.hostname + ':1338';\n\nexport default function Chat() {\n\n  const [chatMessage, setChatMessage] = useState<string>(\"\");\n  const [chatMessages, setChatMessages] = useState<Array<Message>>([]);\n  const [wsRef, setWsRef] = useState<null | WebSocket>(null);\n\n  const history = useHistory();\n\n  const state: any = store.getState();\n\n\n  // let count = 10;\n\n  const handleKeyDown = (event: any) => {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  }\n\n\n  function processMessage(payload: string) {\n    try {\n      return JSON.parse(payload);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  // function showMore() {\n  //   if (wsRef?.readyState !== WebSocket.OPEN) {\n  //     // websocket not connected\n  //     return;\n  //   }\n  //   count = count + 10;\n  //   wsRef.send(JSON.stringify({ intent: 'old-messages', count: count }));\n  // }\n\n  function sendMessage() {\n    if (wsRef?.readyState !== WebSocket.OPEN) {\n      // websocket not connected\n      return;\n    }\n    wsRef.send(JSON.stringify({ message: chatMessage, intent: \"chat\", uname: state.user.uname }))\n    setChatMessage(\"\");\n    window.scrollTo(0, document.body.scrollHeight);\n  }\n\n  useEffect(() => {\n    console.log(\"im fired\", document.body.scrollHeight)\n    window.scrollTo(0, document.body.scrollHeight);\n  }, []);\n\n  useEffect(() => {\n    const ws = new WebSocket(`ws://${HOST}/${localStorage.getItem(\"token\")}`);\n\n    ws.addEventListener(\"open\", () => {\n      ws.send(JSON.stringify({ intent: 'old-messages', count: 100 }));\n    }, { once: true });\n\n    ws.addEventListener(\"error\", () => {\n      this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    })\n\n    ws.addEventListener(\"message\", (event) => {\n      const data = event.data;\n      const message: any = processMessage(data);\n      if (!message) return\n      console.log(\"message\", message)\n      if (message.intent === \"chat\") {\n        setChatMessages(oldMessages => [...oldMessages, message as Message]);\n      } else if (message.intent === \"old-messages\") {\n        console.log(\"old-messages\", message.data);\n        setChatMessages(message.data.reverse());\n      }\n\n    })\n\n    setWsRef(ws);\n\n    return () => {\n      ws.close();\n    }\n\n  }, [history])\n\n  return (\n    <div className=\"chat\">\n      <Banner></Banner>\n      {/* <h2>Live Chat</h2> */}\n      <div className=\"chat__wrapper\">\n        <div className=\"chat__messages\">\n          {/* <Link component=\"button\" onClick={showMore}>Show More</Link> */}\n\n          {\n            chatMessages.map((message, index) => {\n              if (message.uname === state.user.uname) {\n                return (<div className=\"chat__messages__item active\" key={index}>\n                  <div className=\"chat__messages__item__wrapper--active\">\n                    <div className=\"author\">{message.uname}:</div>\n                    <div className=\"message\">{message.message}</div>\n                  </div>\n                </div>)\n              } else {\n                return (<div className=\"chat__messages__item\" key={index}>\n                  <div className=\"chat__messages__item__wrapper\">\n                    <div className=\"author\">{message.uname}:</div>\n                    <div className=\"message\">{message.message}</div>\n                  </div>\n                </div>)\n              }\n\n\n            })}\n             <div style={{ float:\"left\", clear: \"both\" }}\n             ref={(el) => { this.messagesEnd = el; }}>\n            </div>\n        </div>\n        <div className=\"chat__box\">\n          <TextField fullWidth onKeyDown={handleKeyDown} placeholder=\"Live Chat Here\" label=\"Type Your Message\" onChange={(e: any) => setChatMessage(e.target.value)} value={chatMessage} variant=\"outlined\" />\n          <div className=\"chat__box__send\" role=\"button\"><SendIcon fontSize=\"large\" onClick={sendMessage}></SendIcon></div>\n        </div>\n      </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}