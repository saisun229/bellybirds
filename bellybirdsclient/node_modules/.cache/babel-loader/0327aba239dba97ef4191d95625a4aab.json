{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Register/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Header from \"../Header\";\nimport { TextField } from '@material-ui/core';\nimport './style.scss';\nimport { Button } from \"@material-ui/core\";\nimport { useButtonStyles, useTextFieldStyles } from \"../../RootStyles\";\nimport { REGISTER_USER_ENDPOINT } from \"../../endpoints\";\nimport { axiosApiCall } from \"../../utility\";\nimport Alerts from \"../Styleguide/Alerts\";\nimport { useHistory } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport { store } from \"../../redux\";\nexport default function Register() {\n  _s();\n\n  const buttonclasses = useButtonStyles();\n  const textFieldClasses = useTextFieldStyles();\n  const [uname, setUname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [severity, setSeverity] = useState(\"\");\n  const history = useHistory();\n\n  async function registerUser() {\n    const patternMatched = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email);\n\n    if (!patternMatched) {\n      setSeverity(\"error\");\n      setText(\"Invalid Email Address\");\n      return false;\n    }\n\n    if (!password && password.length < 8) {\n      setSeverity(\"error\");\n      setText(\"Password should be atleast 8 digits\");\n      return false;\n    }\n\n    try {\n      const response = await axiosApiCall(REGISTER_USER_ENDPOINT, {\n        uname,\n        email,\n        password\n      });\n      console.log(\"ressss\", response);\n      setSeverity(response.status);\n      setText(response.message);\n\n      if (response.status === \"success\") {\n        window.localStorage.setItem(\"token\", response.tokens);\n        const token = window.localStorage.getItem(\"token\");\n        const decoded = jwt_decode(token);\n        store.dispatch({\n          type: 'getUser',\n          user: {\n            email: decoded.email,\n            uname: decoded.username\n          }\n        });\n        history.push(\"/chat\");\n      }\n    } catch (e) {\n      setSeverity(\"error\");\n      setText(\"Unexpected Error occured\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register__form\",\n      children: [/*#__PURE__*/_jsxDEV(Alerts, {\n        severity: severity,\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: textFieldClasses.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"filled-basic\",\n          placeholder: \"John123\",\n          label: \"User Name\",\n          value: uname,\n          onChange: e => setUname(e.target.value),\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"filled-basic\",\n          placeholder: \"you@awesome.com\",\n          label: \"Your Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"filled-basic\",\n          placeholder: \"p@$$w0rd\",\n          label: \"Your Password\",\n          variant: \"outlined\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          className: buttonclasses.secondary,\n          onClick: registerUser,\n          color: \"default\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Register, \"gsZGEm7TRJwlRLlWft+pIQfZUSQ=\", false, function () {\n  return [useButtonStyles, useTextFieldStyles, useHistory];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Register/index.tsx"],"names":["React","useState","Header","TextField","Button","useButtonStyles","useTextFieldStyles","REGISTER_USER_ENDPOINT","axiosApiCall","Alerts","useHistory","jwt_decode","store","Register","buttonclasses","textFieldClasses","uname","setUname","email","setEmail","password","setPassword","text","setText","severity","setSeverity","history","registerUser","patternMatched","test","length","response","console","log","status","message","window","localStorage","setItem","tokens","token","getItem","decoded","dispatch","type","user","username","push","e","root","target","value","secondary"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport Header from \"../Header\";\nimport { TextField } from '@material-ui/core';\nimport './style.scss';\nimport { Button } from \"@material-ui/core\";\nimport { useButtonStyles, useTextFieldStyles } from \"../../RootStyles\";\nimport {REGISTER_USER_ENDPOINT} from \"../../endpoints\";\nimport { axiosApiCall } from \"../../utility\";\nimport Alerts from \"../Styleguide/Alerts\";\nimport { useHistory } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport {store} from \"../../redux\";\n\n\n\nexport default function Register() {\n    const buttonclasses = useButtonStyles();\n    const textFieldClasses = useTextFieldStyles();\n\n    const [uname, setUname] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [text, setText] = useState(\"\");\n    const [severity, setSeverity] = useState(\"\");\n\n    const history = useHistory();\n\n    async function registerUser() {\n\n        const patternMatched = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email);\n        if (!patternMatched) {\n           setSeverity(\"error\");\n           setText(\"Invalid Email Address\"); \n           return false;\n           }\n         if(!password && password.length < 8) {\n            setSeverity(\"error\");\n            setText(\"Password should be atleast 8 digits\"); \n            return false;\n         }  \n\n        try {\n            const response = await axiosApiCall(REGISTER_USER_ENDPOINT, {uname, email, password});\n            console.log(\"ressss\", response);\n            setSeverity(response.status);\n            setText(response.message);\n            if (response.status === \"success\") {\n                window.localStorage.setItem(\"token\", response.tokens);\n                const token: any = window.localStorage.getItem(\"token\");\n                const decoded: any = jwt_decode(token)\n                store.dispatch({type: 'getUser', user: { email: decoded.email, uname: decoded.username}})\n                history.push(\"/chat\");\n            }\n        } catch(e) {\n            setSeverity(\"error\");\n            setText(\"Unexpected Error occured\");\n        }\n    }\n\n\n  return (\n      <div className=\"register\">\n        <Header></Header>\n        <div className=\"register__form\">\n        <Alerts severity= {severity} text={text}></Alerts>\n        <h2>Register</h2>\n        <form className={textFieldClasses.root} noValidate autoComplete=\"off\">\n           <TextField fullWidth id=\"filled-basic\" placeholder=\"John123\" label=\"User Name\" value={uname} onChange={(e) => setUname(e.target.value)} variant=\"outlined\" />\n           <TextField fullWidth id=\"filled-basic\" placeholder=\"you@awesome.com\" label=\"Your Email\" value={email} onChange={(e) => setEmail(e.target.value)} variant=\"outlined\" />\n           <TextField fullWidth id=\"filled-basic\" placeholder=\"p@$$w0rd\" label=\"Your Password\" variant=\"outlined\" value={password} onChange={(e) => setPassword(e.target.value)}/>\n           <Button fullWidth className={buttonclasses.secondary} onClick={registerUser} color=\"default\" >Register</Button>\n       </form>\n    </div>\n     </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}