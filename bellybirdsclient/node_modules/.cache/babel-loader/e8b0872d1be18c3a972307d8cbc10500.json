{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Nav/index.tsx\",\n    _s = $RefreshSig$();\n\nimport './style.scss';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { store } from \"../../redux\";\nimport React from \"react\"; // import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n// import Link  from '@material-ui/core/Link';\n// import Typography from '@material-ui/core/Typography';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { useHistory } from \"react-router-dom\"; // const useStyles = makeStyles((theme: Theme) =>\n//   createStyles({\n//     root: {\n//       '& > * + *': {\n//         marginLeft: theme.spacing(2),\n//         color: '#000'\n//       },\n//     },\n//   }),\n// );\n\nexport default function Nav() {\n  _s();\n\n  const history = useHistory();\n  const state = store.getState();\n  const isUserAvailable = state.user.email ? true : false;\n  const [alignment, setAlignment] = React.useState('left');\n\n  const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  }; // const classes = useStyles();\n  // function redirectToLogin() {\n  //   history.push(\"/login\");\n  // }\n  // function redirectToRegister() {\n  //   history.push(\"/register\");\n  // }\n\n\n  function redirectUserToChat() {\n    isUserAvailable ? history.push(\"/chat\") : history.push(\"/login\");\n  }\n\n  function redirectUserToHome() {\n    isUserAvailable ? history.push(\"/\") : history.push(\"/login\");\n  }\n\n  function openDropdown() {} // function logoutUser() {\n  //   window.localStorage.removeItem(\"token\");\n  //   store.dispatch({ type: 'getUser', user: { email: \"\", uname: \"\" } });\n  //   history.push(\"/\");\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"nav\",\n    children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n      value: alignment,\n      exclusive: true,\n      onChange: handleAlignment,\n      \"aria-label\": \"text alignment\",\n      children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"left\",\n        \"aria-label\": \"left aligned\",\n        children: /*#__PURE__*/_jsxDEV(HomeIcon, {\n          fontSize: \"large\",\n          onClick: redirectUserToHome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"center\",\n        \"aria-label\": \"centered\",\n        children: /*#__PURE__*/_jsxDEV(ChatIcon, {\n          fontSize: \"large\",\n          onClick: redirectUserToChat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"justify\",\n        \"aria-label\": \"justified\",\n        disabled: true,\n        children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n          fontSize: \"large\",\n          onClick: openDropdown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Nav, \"9QnWwGaMigqmKPN27JYTby6zVIM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Nav/index.tsx"],"names":["HomeIcon","AccountCircleIcon","ChatIcon","store","React","ToggleButton","ToggleButtonGroup","useHistory","Nav","history","state","getState","isUserAvailable","user","email","alignment","setAlignment","useState","handleAlignment","event","newAlignment","redirectUserToChat","push","redirectUserToHome","openDropdown"],"mappings":";;;;;AAAA,OAAO,cAAP;AACA,OAAOA,QAAP,MAAqB,yBAArB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,QAAMC,OAAO,GAAGF,UAAU,EAA1B;AACA,QAAMG,KAAU,GAAGP,KAAK,CAACQ,QAAN,EAAnB;AACA,QAAMC,eAAe,GAAGF,KAAK,CAACG,IAAN,CAAWC,KAAX,GAAmB,IAAnB,GAA0B,KAAlD;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,KAAK,CAACa,QAAN,CAA8B,MAA9B,CAAlC;;AAEA,QAAMC,eAAe,GAAG,CAACC,KAAD,EAAuCC,YAAvC,KAAuE;AAC7FJ,IAAAA,YAAY,CAACI,YAAD,CAAZ;AACD,GAFD,CAR4B,CAW5B;AAEA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,WAASC,kBAAT,GAA8B;AAC5BT,IAAAA,eAAe,GAAGH,OAAO,CAACa,IAAR,CAAa,OAAb,CAAH,GAA2Bb,OAAO,CAACa,IAAR,CAAa,QAAb,CAA1C;AACD;;AAED,WAASC,kBAAT,GAA8B;AAC5BX,IAAAA,eAAe,GAAGH,OAAO,CAACa,IAAR,CAAa,GAAb,CAAH,GAAuBb,OAAO,CAACa,IAAR,CAAa,QAAb,CAAtC;AACD;;AAED,WAASE,YAAT,GAAwB,CAEvB,CA/B2B,CAiC5B;AACA;AACA;AACA;AACA;;;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACM,QAAC,iBAAD;AACH,MAAA,KAAK,EAAET,SADJ;AAEH,MAAA,SAAS,MAFN;AAGH,MAAA,QAAQ,EAAEG,eAHP;AAIH,oBAAW,gBAJR;AAAA,8BAOJ,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC,MAApB;AAA2B,sBAAW,cAAtC;AAAA,+BACA,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAC,OAAnB;AAA2B,UAAA,OAAO,EAAEK;AAApC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAPI,eAYJ,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC,QAApB;AAA6B,sBAAW,UAAxC;AAAA,+BACA,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAC,OAAnB;AAA2B,UAAA,OAAO,EAAEF;AAApC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAZI,eAiBJ,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC,SAApB;AAA8B,sBAAW,WAAzC;AAAqD,QAAA,QAAQ,MAA7D;AAAA,+BACA,QAAC,iBAAD;AAAmB,UAAA,QAAQ,EAAC,OAA5B;AAAoC,UAAA,OAAO,EAAEG;AAA7C;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAjBI;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,UADD;AA4CD;;GAnFuBhB,G;UAEND,U;;;KAFMC,G","sourcesContent":["import './style.scss';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { store } from \"../../redux\";\nimport React from \"react\";\n// import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n// import Link  from '@material-ui/core/Link';\n// import Typography from '@material-ui/core/Typography';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { useHistory } from \"react-router-dom\";\n\n// const useStyles = makeStyles((theme: Theme) =>\n//   createStyles({\n//     root: {\n//       '& > * + *': {\n//         marginLeft: theme.spacing(2),\n//         color: '#000'\n//       },\n//     },\n//   }),\n// );\nexport default function Nav() {\n\n  const history = useHistory();\n  const state: any = store.getState();\n  const isUserAvailable = state.user.email ? true : false;\n\n  const [alignment, setAlignment] = React.useState<string | null>('left');\n\n  const handleAlignment = (event: React.MouseEvent<HTMLElement>, newAlignment: string | null) => {\n    setAlignment(newAlignment);\n  };\n  // const classes = useStyles();\n\n  // function redirectToLogin() {\n  //   history.push(\"/login\");\n  // }\n\n  // function redirectToRegister() {\n  //   history.push(\"/register\");\n  // }\n\n  function redirectUserToChat() {\n    isUserAvailable ? history.push(\"/chat\") : history.push(\"/login\");\n  }\n\n  function redirectUserToHome() {\n    isUserAvailable ? history.push(\"/\") : history.push(\"/login\");\n  }\n\n  function openDropdown() {\n\n  }\n\n  // function logoutUser() {\n  //   window.localStorage.removeItem(\"token\");\n  //   store.dispatch({ type: 'getUser', user: { email: \"\", uname: \"\" } });\n  //   history.push(\"/\");\n  // }\n\n  return (\n   <nav className=\"nav\">\n         <ToggleButtonGroup\n      value={alignment}\n      exclusive\n      onChange={handleAlignment}\n      aria-label=\"text alignment\"\n    >\n     {/* <div className=\"nav--home\"> */}\n     <ToggleButton value=\"left\" aria-label=\"left aligned\">\n     <HomeIcon fontSize=\"large\" onClick={redirectUserToHome}></HomeIcon>\n     </ToggleButton>\n     {/* </div> */}\n     {/* <div className=\"nav--chat\"> */}\n     <ToggleButton value=\"center\" aria-label=\"centered\">\n     <ChatIcon fontSize=\"large\" onClick={redirectUserToChat}></ChatIcon>\n     </ToggleButton>\n     {/* </div> */}\n     {/* <div className=\"nav-account\"> */}\n     <ToggleButton value=\"justify\" aria-label=\"justified\" disabled>\n     <AccountCircleIcon fontSize=\"large\" onClick={openDropdown}></AccountCircleIcon>\n     </ToggleButton>\n     {/* </div> */}\n     </ToggleButtonGroup>\n     \n      {/* {\n        isUserAvailable ? (\n\n          <div className=\"home__header__nav\">\n           <Typography className={classes.root}>\n             <Link href=\"#\" component=\"button\" onClick={logoutUser}>Logout</Link>\n             <Link href=\"#\" component=\"button\" onClick={redirectUser} color=\"inherit\">Hi {state.user.uname}</Link>\n          </Typography>\n          </div>) : \n          (<div className=\"home__header__nav\">\n           <Typography className={classes.root}>\n             <Link href=\"#\" component=\"button\"  onClick={redirectToLogin}  >Login</Link>\n             <Link href=\"#\" component=\"button\"  onClick={redirectToRegister} >Register</Link>\n          </Typography>\n          </div>)\n\n      } */}\n   </nav>\n  )\n}"]},"metadata":{},"sourceType":"module"}