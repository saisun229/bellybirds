{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Chat/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { TextField, Button } from '@material-ui/core';\nimport { useButtonStyles } from \"../../RootStyles\";\nimport Header from \"../Header\";\nimport './style.css';\nimport { useHistory } from \"react-router-dom\";\nexport default function Chat() {\n  _s();\n\n  const [chatMessage, setChatMessage] = useState(\"\");\n  const [chatMessages, setChatMessages] = useState([]);\n  const [wsRef, setWsRef] = useState(null);\n  const buttonclasses = useButtonStyles();\n  const history = useHistory();\n\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  };\n\n  function processMessage(payload) {\n    try {\n      return JSON.parse(payload);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  function sendMessage() {\n    if ((wsRef === null || wsRef === void 0 ? void 0 : wsRef.readyState) !== WebSocket.OPEN) {\n      // websocket not connected\n      return;\n    }\n\n    wsRef.send(JSON.stringify({\n      message: chatMessage,\n      intent: \"chat\"\n    }));\n    setChatMessage(\"\");\n  }\n\n  useEffect(() => {\n    const ws = new WebSocket(`ws://localhost:1338/${localStorage.getItem(\"token\")}`);\n    ws.addEventListener(\"open\", () => {\n      ws.send(JSON.stringify({\n        intent: 'old-messages',\n        count: 10\n      }));\n    }, {\n      once: true\n    });\n    ws.addEventListener(\"error\", () => {\n      alert(\"Please login\");\n      history.replace(\"/login\");\n    });\n    ws.addEventListener(\"message\", event => {\n      const data = event.data;\n      const message = processMessage(data);\n      if (!message) return;\n      console.log(\"message\", message);\n\n      if (message.intent === \"chat\") {\n        setChatMessages(oldMessages => [...oldMessages, message]);\n      } else if (message.intent === \"old-messages\") {\n        console.log(\"old-messages\", message.data);\n        setChatMessages(message.data.reverse());\n      }\n    });\n    setWsRef(ws);\n    return () => {\n      ws.close();\n    };\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat Box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__messages\",\n      children: [console.log(\"chatMessages\", chatMessages), chatMessages.map((message, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat__messages__item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"author\",\n            children: [message.email, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 22\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__box\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        onKeyDown: handleKeyDown,\n        placeholder: \"Your Message Here\",\n        label: \"Type Your Message\",\n        onChange: e => setChatMessage(e.target.value),\n        value: chatMessage,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        className: buttonclasses.secondary,\n        onClick: sendMessage,\n        color: \"default\",\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"iBnsZhEUBX/rp1+ek9IWV3dablc=\", false, function () {\n  return [useButtonStyles, useHistory];\n});\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Chat/index.tsx"],"names":["React","useEffect","useState","TextField","Button","useButtonStyles","Header","useHistory","Chat","chatMessage","setChatMessage","chatMessages","setChatMessages","wsRef","setWsRef","buttonclasses","history","handleKeyDown","event","key","sendMessage","processMessage","payload","JSON","parse","e","readyState","WebSocket","OPEN","send","stringify","message","intent","ws","localStorage","getItem","addEventListener","count","once","alert","replace","data","console","log","oldMessages","reverse","close","map","index","email","target","value","secondary"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { TextField, Button } from '@material-ui/core';\nimport { useButtonStyles} from \"../../RootStyles\"\nimport Header from \"../Header\";\nimport './style.css';\nimport { useHistory } from \"react-router-dom\"\n\n\ntype Message = {\n  email: string;\n  message: string;\n  intent: string;\n  //ToDO: date\n}\n\n\nexport default function Chat() {\n\n  const [chatMessage, setChatMessage] = useState<string>(\"\");\n  const [chatMessages, setChatMessages] = useState<Array<Message>>([]);\n  const [wsRef, setWsRef] = useState<null | WebSocket>(null);\n\n  const buttonclasses = useButtonStyles();\n\n  const history = useHistory();\n\n  const handleKeyDown = (event: any) => {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  }\n\n\n  function processMessage(payload: string) {\n    try {\n      return JSON.parse(payload);\n    } catch(e) {\n      return null;\n    }\n  }\n\n  function sendMessage() {\n      if(wsRef?.readyState !== WebSocket.OPEN) {\n        // websocket not connected\n        return;\n      }\n      wsRef.send(JSON.stringify({ message: chatMessage, intent: \"chat\"}))\n      setChatMessage(\"\");\n  }\n\n  useEffect(() => {\n       const ws = new WebSocket(`ws://localhost:1338/${localStorage.getItem(\"token\")}`);\n\n       ws.addEventListener(\"open\", ()=> {\n        ws.send(JSON.stringify({ intent: 'old-messages', count: 10}));\n       }, {once: true});\n\n       ws.addEventListener(\"error\", ()=> {\n         alert(\"Please login\");\n         history.replace(\"/login\");\n       })\n\n       ws.addEventListener(\"message\", (event) => {\n         const data = event.data;\n         const message: any = processMessage(data);\n         if(!message) return\n         console.log(\"message\", message)\n         if(message.intent === \"chat\") {\n          setChatMessages(oldMessages => [...oldMessages, message as Message]);\n         } else if (message.intent === \"old-messages\") {\n           console.log(\"old-messages\", message.data);\n           setChatMessages(message.data.reverse());\n         }\n         \n       })\n\n       setWsRef(ws);\n\n       return () => {\n         ws.close();\n       }\n\n  }, [history])\n  \n  return (\n    <div className=\"chat\">\n       <Header></Header>\n       <h2>Chat Box</h2>\n       <div className=\"chat__messages\">\n         {console.log(\"chatMessages\", chatMessages)}\n         { chatMessages.map( (message, index) => {\n           return (<div className=\"chat__messages__item\" key={index}>\n                     <div className=\"author\">{message.email}:</div>\n                     <div className=\"message\">{message.message}</div>\n                 </div>)\n         }) }\n       </div>\n       <div className=\"chat__box\">\n        \n          <TextField fullWidth onKeyDown={handleKeyDown} placeholder=\"Your Message Here\" label=\"Type Your Message\" onChange={(e: any) => setChatMessage(e.target.value)} value={chatMessage}  variant=\"outlined\" />\n          <br />\n          <Button  fullWidth className={buttonclasses.secondary}  onClick={sendMessage} color=\"default\" >Send Message</Button>\n       </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}