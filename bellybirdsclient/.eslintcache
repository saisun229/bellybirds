[{"/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Home/index.tsx":"1","/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/index.tsx":"2","/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/index.tsx":"3","/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Header/index.tsx":"4","/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Register/index.tsx":"5","/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Login/index.tsx":"6","/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/RootStyles.ts":"7","/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/endpoints.ts":"8","/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/utility.ts":"9","/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Chat/index.tsx":"10"},{"size":704,"mtime":1610301298680,"results":"11","hashOfConfig":"12"},{"size":582,"mtime":1611430671911,"results":"13","hashOfConfig":"12"},{"size":227,"mtime":1610290800519,"results":"14","hashOfConfig":"12"},{"size":228,"mtime":1610296798699,"results":"15","hashOfConfig":"12"},{"size":1636,"mtime":1611420797847,"results":"16","hashOfConfig":"12"},{"size":3688,"mtime":1611435963773,"results":"17","hashOfConfig":"12"},{"size":771,"mtime":1610301416209,"results":"18","hashOfConfig":"12"},{"size":103,"mtime":1611420755170,"results":"19","hashOfConfig":"12"},{"size":1097,"mtime":1611433728757,"results":"20","hashOfConfig":"12"},{"size":3043,"mtime":1612154679985,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lruxma",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Home/index.tsx",[],"/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/index.tsx",[],"/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/index.tsx",[],["44","45"],"/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Header/index.tsx",[],"/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Register/index.tsx",["46","47"],"/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Login/index.tsx",[],"/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/RootStyles.ts",[],"/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/endpoints.ts",[],"/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/utility.ts",[],"/Users/saikrishnareddymudhiganti/Desktop/MyProjects/projects/bellybird/bellybirdsclient/src/components/Chat/index.tsx",["48"],"import React, {useEffect, useState} from \"react\";\nimport { TextField, Button } from '@material-ui/core';\nimport { useButtonStyles} from \"../../RootStyles\"\nimport Header from \"../Header\";\nimport './style.css';\nimport { useHistory } from \"react-router-dom\"\n\n\ntype Message = {\n  email: string;\n  message: string;\n  intent: string;\n  //ToDO: date\n}\n\n\nexport default function Chat() {\n\n  const [chatMessage, setChatMessage] = useState<string>(\"\");\n  const [chatMessages, setChatMessages] = useState<Array<Message>>([]);\n  const [wsRef, setWsRef] = useState<null | WebSocket>(null);\n\n  const buttonclasses = useButtonStyles();\n\n  const history = useHistory();\n\n  const handleKeyDown = (event: any) => {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  }\n\n\n  function processMessage(payload: string) {\n    try {\n      return JSON.parse(payload);\n    } catch(e) {\n      return null;\n    }\n  }\n\n  function sendMessage() {\n      if(wsRef?.readyState !== WebSocket.OPEN) {\n        // websocket not connected\n        return;\n      }\n      wsRef.send(JSON.stringify({ message: chatMessage, intent: \"chat\"}))\n      setChatMessage(\"\");\n  }\n\n  useEffect(() => {\n       const ws = new WebSocket(`ws://localhost:1338/${localStorage.getItem(\"token\")}`);\n\n       ws.addEventListener(\"open\", ()=> {\n        ws.send(JSON.stringify({ intent: 'old-messages', count: 10}));\n       }, {once: true});\n\n       ws.addEventListener(\"error\", ()=> {\n         alert(\"Please login\");\n         history.replace(\"/login\");\n       })\n\n       ws.addEventListener(\"message\", (event) => {\n         const data = event.data;\n         const message: any = processMessage(data);\n         if(!message) return\n         console.log(\"message\", message)\n         if(message.intent === \"chat\") {\n          setChatMessages(oldMessages => [...oldMessages, message as Message]);\n         } else if (message.intent === \"old-messages\") {\n           console.log(\"old-messages\", message.data);\n           setChatMessages(message.data.reverse());\n         }\n         \n       })\n\n       setWsRef(ws);\n\n       return () => {\n         ws.close();\n       }\n\n  }, [])\n  \n  return (\n    <div className=\"chat\">\n       <Header></Header>\n       <h2>Chat Box</h2>\n       <div className=\"chat__messages\">\n         {console.log(\"chatMessages\", chatMessages)}\n         { chatMessages.map( (message, index) => {\n           return (<div className=\"chat__messages__item\" key={index}>\n                     <div className=\"author\">{message.email}:</div>\n                     <div className=\"message\">{message.message}</div>\n                 </div>)\n         }) }\n       </div>\n       <div className=\"chat__box\">\n        \n          <TextField fullWidth onKeyDown={handleKeyDown} placeholder=\"Your Message Here\" label=\"Type Your Message\" onChange={(e: any) => setChatMessage(e.target.value)} value={chatMessage}  variant=\"outlined\" />\n          <br />\n          <Button  fullWidth className={buttonclasses.secondary}  onClick={sendMessage} color=\"default\" >Send Message</Button>\n       </div>\n    </div>\n  )\n}",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":4,"column":10,"nodeType":"55","messageId":"56","endLine":4,"endColumn":20},{"ruleId":"53","severity":1,"message":"57","line":23,"column":19,"nodeType":"55","messageId":"56","endLine":23,"endColumn":27},{"ruleId":"58","severity":1,"message":"59","line":83,"column":6,"nodeType":"60","endLine":83,"endColumn":8,"suggestions":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"@typescript-eslint/no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["64"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [history]",{"range":"67","text":"68"},[2113,2115],"[history]"]